<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
    
	    <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->     
	    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
        <!-- 启动类扫描的注解器 -->
        <context:component-scan base-package="com.net.zxz"></context:component-scan>

	    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	        <property name="locations">
	            <list>
	                <value>classpath:jdbc.properties</value>
	            </list>
	        </property>
	    </bean>

	    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <property name="driverClassName" value="${jdbc.driverClassName}" />
	        <property name="url" value="${jdbc.url}" />
	        <property name="username" value="${jdbc.username}" />
	        <property name="password" value="${jdbc.password}" />
	        <property name="maxActive" value="${jdbc.maxActive}" />
	        <property name="maxWait" value="${jdbc.maxWait}" />
	        <property name="maxIdle" value="${jdbc.maxIdle}" />
	        <property name="minIdle" value="${jdbc.minIdle}" />
	        <property name="initialSize" value="${jdbc.initialSize}" />
	        <property name="validationQuery" value="${jdbc.validationQuery}" />
	        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
	        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	        <property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}" />
	        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
	    </bean>
	    
	    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
	        <property name="dataSource" ref="dataSource" />
	    </bean>

	    <!-- transaction begin-->
	    <!-- 配置事务管理器 -->
	    <!--<bean id="jdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	        <property name="dataSource" ref="dataSource" />
	    </bean>-->
	    
	    <!-- transaction begin-->
	    <!-- 配置事务管理器 -->
	    <bean id="jdbcTransactionManager" class="com.net.zxz.transaction.TransactionManager">
	        <property name="dataSource" ref="dataSource" />
	    </bean>
        
	    <!-- 配置事务的传播特性 -->
	    <tx:advice id="defaultTxAdvice" transaction-manager="jdbcTransactionManager">
	        <tx:attributes>
	            <tx:method name="get*" propagation="SUPPORTS"/>
	            <tx:method name="find*" propagation="SUPPORTS"/>
	            <tx:method name="query*" propagation="SUPPORTS"/>
	            <tx:method name="stat*" propagation="SUPPORTS"/>
	            <tx:method name="isExists*" propagation="SUPPORTS"/>
	
	            <tx:method name="add*" />
	            <tx:method name="update*" />
	            <tx:method name="delete*" />
	            <tx:method name="save*" />
	            <tx:method name="init*" />
	            <tx:method name="importData*" />
	            <tx:method name="batch*" />
	            <tx:method name="insert*" />
	            <tx:method name="generate*" />
	            <tx:method name="*" propagation="SUPPORTS"/>
	        </tx:attributes>
	    </tx:advice>
        
        <aop:config>
            <!--配置规则，满足以下规则的将拦截，第一个*表示所有返回类型，第二个表示service包下的所有class，第三个表示所有方法-->
            <aop:pointcut id="baseServiceMethods" expression="execution(* com.net.zxz..*Service.*(..))"/>
            <!-- 符合上面规则的拦截器都会调用到methodServiceAdvisor -->
            <aop:advisor advice-ref="defaultTxAdvice" pointcut-ref="baseServiceMethods"/>
        </aop:config>
</beans>

